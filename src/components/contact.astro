---
import { email, location } from "@/data.json"
---

<div id="contact" class="mb-8">
  <section>
    <div class="max-w-[1320px] mx-auto sm:px-4">
      <h2 class="font-paint text-center text-xl">CONTACT ME</h2>
      <div class="flex flex-wrap mt-4">
        <div
          class="mb-4 md:hidden lg:block lg:mb-0 w-full lg:w-1/3 pr-4 pl-4 d-grid content-center"
        >
          <span>Ready to Innovate?</span>
          <p>Let's Bring Your Vision to Life!</p>
        </div>

        <div
          class="contact_form w-full lg:w-2/3 md:max-w-[70vw] md:mx-auto px-4 content-center"
        >
          <form
            method="post"
            id="contact_form"
            name="portfolio_form"
            astro-data-reload
            novalidate
          >
            <label
              for="name"
              class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
              >Your name</label
            >
            <div class="flex">
              <span
                class="inline-flex items-center px-3 text-sm text-gray-900 bg-gray-200 border rounded-e-0 border-gray-300 border-e-0 rounded-s-md dark:bg-gray-600 dark:text-gray-400 dark:border-gray-600"
              >
                <svg
                  class="w-4 h-4 text-gray-500 dark:text-gray-400"
                  aria-hidden="true"
                  fill="currentColor"
                  viewBox="0 0 20 20"
                >
                  <path
                    d="M10 0a10 10 0 1 0 10 10A10.011 10.011 0 0 0 10 0Zm0 5a3 3 0 1 1 0 6 3 3 0 0 1 0-6Zm0 13a8.949 8.949 0 0 1-4.951-1.488A3.987 3.987 0 0 1 9 13h2a3.987 3.987 0 0 1 3.951 3.512A8.949 8.949 0 0 1 10 18Z"
                  ></path>
                </svg>
              </span>
              <input
                type="text"
                id="name"
                name="name"
                class="form-control rounded-none rounded-e-lg bg-gray-50 border text-gray-900 focus:ring-blue-500 focus:border-blue-500 block flex-1 min-w-0 w-full text-sm border-gray-300 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Your name"
              />
            </div>

            <label
              for="email"
              class="block mb-2 mt-6 text-sm font-medium text-gray-900 dark:text-white"
              >Your Email</label
            >
            <div class="relative">
              <div
                class="absolute inset-y-0 start-0 flex items-center ps-3.5 pointer-events-none"
              >
                <svg
                  class="w-4 h-4 text-gray-500 dark:text-gray-400"
                  aria-hidden="true"
                  fill="currentColor"
                  viewBox="0 0 20 16"
                >
                  <path
                    d="m10.036 8.278 9.258-7.79A1.979 1.979 0 0 0 18 0H2A1.987 1.987 0 0 0 .641.541l9.395 7.737Z"
                  ></path>
                  <path
                    d="M11.241 9.817c-.36.275-.801.425-1.255.427-.428 0-.845-.138-1.187-.395L0 2.6V14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2.5l-8.759 7.317Z"
                  ></path>
                </svg>
              </div>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="form-control bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full ps-10 p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="name@mail.com"
              />
            </div>

            <div class="mt-6">
              <label
                for="subject"
                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                >Subject</label
              >
              <input
                type="text"
                name="subject"
                id="subject"
                class="form-control bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
                placeholder="Subject"
                required
              />
            </div>
            <div class="mt-6">
              <label
                for="message"
                class="block mb-2 text-sm font-medium text-gray-900 dark:text-white"
                >Message</label
              >
              <input
                type="text"
                id="message"
                name="message"
                placeholder="Message"
                class="form-control block w-full p-4 text-gray-900 border border-gray-300 rounded-lg bg-gray-50 text-base focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:border-gray-600 dark:placeholder-gray-400 dark:text-white dark:focus:ring-blue-500 dark:focus:border-blue-500"
              />
            </div>
            <div class="w-full mt-3">
              <p id="thanks-message" class="thanks hidden">
                Thank you. I will reply soon.
              </p>
            </div>
            <div class="mt-8">
              <button
                class="flex flex-wrap items-center text-center select-none border font-normal disabled:cursor-not-allowed rounded py-3 px-4 text-xl w-full text-white hover:cursor-pointer justify-center gap-8"
                id="send-button"
              >
                <svg
                  class="w-4 h-4 text-white me-2"
                  aria-hidden="true"
                  xmlns="http://www.w3.org/2000/svg"
                  fill="currentColor"
                  viewBox="0 0 20 16"
                >
                  <path
                    d="m10.036 8.278 9.258-7.79A1.979 1.979 0 0 0 18 0H2A1.987 1.987 0 0 0 .641.541l9.395 7.737Z"
                  ></path>
                  <path
                    d="M11.241 9.817c-.36.275-.801.425-1.255.427-.428 0-.845-.138-1.187-.395L0 2.6V14a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V2.5l-8.759 7.317Z"
                  ></path>
                </svg>
                Send
              </button>
            </div>
          </form>
          <div id="loading-spinner" class="hidden justify-center" role="status">
            <div role="status">
              <svg
                aria-hidden="true"
                class="w-8 h-8 text-gray-200 animate-spin dark:text-gray-600 fill-blue-600"
                viewBox="0 0 100 101"
                fill="none"
              >
                <path
                  d="M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z"
                  fill="currentColor"></path>
                <path
                  d="M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z"
                  fill="currentFill"></path>
              </svg>
              <span class="sr-only">Loading...</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</div>

<style>
  .form-control.is-valid {
    border-color: var(--bs-form-valid-border-color);
    padding-right: calc(1.5em + 0.75rem);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 8 8'%3e%3cpath fill='%23198754' d='M2.3 6.73.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/%3e%3c/svg%3e") !important;
    background-repeat: no-repeat !important;
    background-position: right calc(0.375em + 0.1875rem) center !important;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) !important;
  }

  .form-control.is-invalid {
    @apply border-red-600;
    padding-right: calc(1.5em + 0.75rem);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' width='12' height='12' fill='none' stroke='%23dc3545'%3e%3ccircle cx='6' cy='6' r='4.5'/%3e%3cpath stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/%3e%3ccircle cx='6' cy='8.2' r='.6' fill='%23dc3545' stroke='none'/%3e%3c/svg%3e") !important;
    background-repeat: no-repeat !important;
    background-position: right calc(0.375em + 0.1875rem) center !important;
    background-size: calc(0.75em + 0.375rem) calc(0.75em + 0.375rem) !important;
  }
</style>

<script>
  import "@emailjs/browser/dist/email"
  import { emailValidator, requiredValidator } from "../utils/form-validators"

  const EMAILJS_ID = import.meta.env.PUBLIC_EMAILJS_ID
  const CONTACT_SERVICE = import.meta.env.PUBLIC_CONTACT_SERVICE
  const TEMPLATE_ID = import.meta.env.PUBLIC_TEMPLATE_ID
  const IP_API_KEY = import.meta.env.PUBLIC_IP_API_KEY
  const IP_API = `https://api.ipregistry.co/?key=${IP_API_KEY}`
  const EMAIL_API = "https://api.emailjs.com/api/v1.0/email/send"

  const thanksMessage = document.getElementById("thanks-message") as HTMLElement
  const loadingSpinner = document.getElementById(
    "loading-spinner"
  ) as HTMLElement
  const form = document.getElementById("contact_form") as HTMLFormElement
  const sendButton = document.getElementById("send-button") as HTMLButtonElement

  form.addEventListener("submit", async (e) => {
    e.preventDefault()
    const inputElements = {
      name: document.getElementById("name"),
      email: document.getElementById("email"),
      subject: document.getElementById("subject"),
      message: document.getElementById("message"),
    } as Record<string, HTMLElement>
    const formData = new FormData(form)

    let errors = false

    for (const [key, value] of formData) {
      if (!value.toString().length && inputElements[key]) {
        inputElements[key].classList.add("is-invalid")
        errors = true
      }
      if (
        ["name", "subject", "message"].includes(key) &&
        !requiredValidator(value.toString())
      ) {
        inputElements[key].classList.add("is-invalid")
        errors = true
      }
      if (key === "email" && !emailValidator(value.toString())) {
        inputElements[key].classList.add("is-invalid")
        errors = true
      }
    }

    if (errors) return

    let location
    loadingSpinner.style.display = "flex"
    sendButton.style.display = "none"

    await fetch(IP_API)
      .then((res) => res.json())
      .then(
        (payload) =>
          (location = `${payload.location.country.flag.emoji} ${payload.location.city}, ${payload.location.latitude} ${payload.location.longitude}`)
      )

    var data = {
      service_id: CONTACT_SERVICE,
      template_id: TEMPLATE_ID,
      user_id: EMAILJS_ID,
      template_params: {
        location: String(location),
        from_name: formData.get("name"),
        from_email: formData.get("email"),
        subject: formData.get("subject"),
        message: formData.get("message"),
      },
    }

    await fetch(EMAIL_API, {
      method: "POST",
      body: JSON.stringify(data),
      mode: "cors",
      headers: { "Content-Type": "application/json" },
    })
      .then(function () {
        thanksMessage.style.display = "block"
        Object.values(inputElements).forEach((input) => {
          input.classList.remove("is-valid", "is-invalid")
        })
      })
      .catch(function (err) {
        alert(`Something went wrong!! Please try again. ${err}`)
      })
      .finally(() => {
        loadingSpinner.style.display = "none"
        sendButton.style.display = "flex"
        form.reset()
      })
  })
</script>
